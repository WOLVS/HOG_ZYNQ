-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Resize_opr_linear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_rows_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_dst_cols_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of image_filter_Resize_opr_linear is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (49 downto 0) := "00000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (49 downto 0) := "00000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (49 downto 0) := "00000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (49 downto 0) := "00000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (49 downto 0) := "00000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (49 downto 0) := "00000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (49 downto 0) := "00001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (49 downto 0) := "00010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (49 downto 0) := "00100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (49 downto 0) := "01000000000000000000000000000000000000000000000000";
    constant ap_ST_pp0_stg0_fsm_49 : STD_LOGIC_VECTOR (49 downto 0) := "10000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_FFF6 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv27_7FF8000 : STD_LOGIC_VECTOR (26 downto 0) := "111111111111000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv28_10000 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv20_40000 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_true : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_68 : BOOLEAN;
    signal p_Val2_15_reg_290 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st47_fsm_46 : STD_LOGIC;
    signal ap_sig_bdd_119 : BOOLEAN;
    signal grp_fu_364_ap_done : STD_LOGIC;
    signal grp_fu_390_ap_done : STD_LOGIC;
    signal p_Val2_8_fu_465_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_51_fu_475_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_503_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_52_fu_513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_fu_558_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st48_fsm_47 : STD_LOGIC;
    signal ap_sig_bdd_153 : BOOLEAN;
    signal cols_fu_574_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_cast_fu_586_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_cast_fu_595_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_cast_fu_607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_cast_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st49_fsm_48 : STD_LOGIC;
    signal ap_sig_bdd_172 : BOOLEAN;
    signal i_fu_632_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_1745 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_fu_638_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_reg_1750 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_45_cast_fu_644_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_cast_reg_1755 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_2_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_2_reg_1766 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_660_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_21_reg_1771 : STD_LOGIC_VECTOR (26 downto 0);
    signal i_op_assign_cast_fu_668_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_op_assign_cast_reg_1776 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_49 : STD_LOGIC;
    signal ap_sig_bdd_196 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it35 : STD_LOGIC := '0';
    signal exitcond_reg_1782 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_rd_2_reg_1924 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_5_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1957 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_287 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it37 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it38 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it39 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it40 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it41 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it42 : STD_LOGIC := '0';
    signal brmerge_demorgan_reg_1961 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_309 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it43 : STD_LOGIC := '0';
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it5 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it7 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it8 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it9 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it11 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it12 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it13 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it14 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it15 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it16 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it17 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it18 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it19 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it20 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it21 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it22 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it23 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it24 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it25 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it26 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it27 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it28 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it29 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it30 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it31 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it32 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it33 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it34 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1782_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_677_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_39_reg_1796_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1808 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_col_wr_1_reg_1808_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_712_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_fu_716_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_54_fu_721_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_p_Val2_3_reg_1838_pp0_it34 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_2_reg_1848 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_reg_1855 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_766_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_reg_1860 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_reg_1865 : STD_LOGIC_VECTOR (31 downto 0);
    signal sx_2_fu_816_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sx_2_reg_1870 : STD_LOGIC_VECTOR (15 downto 0);
    signal sy_3_fu_841_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sy_3_reg_1877 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1882 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_38_reg_1882_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_38_reg_1882_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal sy_4_fu_852_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sy_4_reg_1887 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1895 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_900_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_59_reg_1900 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_35_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1905 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_930_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_60_reg_1910 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1915 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_37_reg_1915_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_5_fu_1003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_rd_2_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_reg_1928 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_buf_val_val_0_0_addr_gep_fu_257_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_val_val_0_0_addr_reg_1943 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_42_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1949 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_1953 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it41 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_V_fu_1149_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal u_V_reg_1965 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_2_fu_1163_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_2_reg_1971 : STD_LOGIC_VECTOR (19 downto 0);
    signal v1_V_fu_1207_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal v1_V_reg_1977 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_u_V_fu_1212_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_u_V_reg_1982 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_fu_1218_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_reg_1987 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_fu_1528_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_reg_1992 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_6_fu_1534_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_6_reg_1997 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_7_fu_1522_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_7_reg_2002 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_8_fu_1516_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_8_reg_2007 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP2_V_8_cast_fu_1291_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1270_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_20_reg_2048 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1282_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_4_reg_2053 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1294_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_5_reg_2058 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1303_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_6_reg_2063 : STD_LOGIC_VECTOR (46 downto 0);
    signal signbit_reg_2068 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_27_reg_2075 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_reg_2080 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_2085 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_2090 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_2096 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_fu_1418_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_reg_2101 : STD_LOGIC_VECTOR (7 downto 0);
    signal neg_src_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_reg_2107 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_reg_2112 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_reg_2118 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_val_val_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_val_val_0_0_ce0 : STD_LOGIC;
    signal k_buf_val_val_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_0_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_val_val_0_0_ce1 : STD_LOGIC;
    signal k_buf_val_val_0_0_we1 : STD_LOGIC;
    signal k_buf_val_val_0_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_val_val_1_0_ce0 : STD_LOGIC;
    signal k_buf_val_val_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_1_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_val_val_1_0_ce1 : STD_LOGIC;
    signal k_buf_val_val_1_0_we1 : STD_LOGIC;
    signal k_buf_val_val_1_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_reg_279 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it30 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it31 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it5 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it7 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it8 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it9 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it11 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it12 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it13 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it14 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it15 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it16 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it17 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it18 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it19 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it20 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it21 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it22 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it23 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it24 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it25 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it26 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it27 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it28 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dy_reg_301pp0_it29 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dx_reg_310pp0_it30 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_dx_reg_310pp0_it31 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phiprechg_win_val_val_1_0_0_2_reg_319pp0_it36 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_val_1_0_0_2_phi_fu_322_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_wr_fu_150 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_3_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_fu_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_fx_fu_158 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_5_fu_1052_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fy_fu_162 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fy_5_fu_978_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_fu_166 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_2_fu_959_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_1_fu_1102_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal win_val_0_val_1_0_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_0_val_1_0_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_1_val_1_0_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_1_val_1_0_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_344_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_364_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_364_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_7_fu_370_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_390_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_390_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_364_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_lshr_f1_cast_fu_445_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_30_cast_cast_fu_455_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_7_fu_459_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_lshr_f_cast_fu_483_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_34_cast_cast_fu_493_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_11_fu_497_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_11_fu_425_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_47_fu_437_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_533_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_2_fu_541_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_553_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_569_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sx_fu_581_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sy_fu_590_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_16_fu_536_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_17_fu_599_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_17_fu_544_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_18_fu_611_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal i_op_assign_11_cast_fu_623_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_683_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_695_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_695_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_683_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_695_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_729_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_738_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_792_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_774_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_fu_808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_829_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_7_fu_834_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_874_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_67_cast_fu_884_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_3_fu_888_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_34_fu_907_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_904_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_73_cast_fu_914_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_4_fu_918_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sel_tmp4_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_fy_1_sy_fu_953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_970_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal not_1_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_1_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_4_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1024_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pre_fx_1_fu_938_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_cast_fu_1029_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_2_fu_985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_2_sx_fu_1045_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal not_s_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_2_fu_1069_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1142_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_36_fu_1156_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal u1_V_fu_1202_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1294_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1303_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_4_cast_fu_1312_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_49_cast_fu_1309_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_23_fu_1315_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_50_cast_fu_1321_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_5_cast_fu_1325_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_6_cast_fu_1336_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_54_cast_fu_1332_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_1398_cast_cast_fu_1339_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp3_fu_1343_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp28_cast_fu_1349_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_44_fu_1328_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_26_fu_1353_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Result_4_i_i_fu_1393_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_i_i_fu_1415_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_1423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_i_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_i_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_fu_1494_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_fu_1501_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_fu_1516_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_1522_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal OP2_V_fu_1236_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_7_fu_1522_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_1528_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_fu_1528_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_fu_1534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_364_ap_start : STD_LOGIC;
    signal grp_fu_364_ce : STD_LOGIC;
    signal grp_fu_390_ap_start : STD_LOGIC;
    signal grp_fu_390_ce : STD_LOGIC;
    signal grp_fu_683_ce : STD_LOGIC;
    signal grp_fu_695_ce : STD_LOGIC;
    signal grp_fu_729_ce : STD_LOGIC;
    signal grp_fu_738_ce : STD_LOGIC;
    signal grp_fu_1270_ce : STD_LOGIC;
    signal grp_fu_1282_ce : STD_LOGIC;
    signal grp_fu_1294_ce : STD_LOGIC;
    signal grp_fu_1303_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_364_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_390_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_6_fu_1534_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_7_fu_1522_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_8_fu_1516_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_1528_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_sig_bdd_526 : BOOLEAN;
    signal ap_sig_bdd_522 : BOOLEAN;
    signal ap_sig_bdd_782 : BOOLEAN;
    signal ap_sig_bdd_846 : BOOLEAN;
    signal ap_sig_bdd_398 : BOOLEAN;
    signal ap_sig_bdd_518 : BOOLEAN;
    signal ap_sig_bdd_1977 : BOOLEAN;
    signal ap_sig_bdd_1980 : BOOLEAN;
    signal ap_sig_bdd_889 : BOOLEAN;

    component image_filter_udiv_43ns_27ns_43_47_seq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component image_filter_udiv_27ns_27ns_27_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component image_filter_mul_32s_12s_32_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component image_filter_mul_28s_20s_47_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component image_filter_mul_mul_20s_8ns_28_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component image_filter_Resize_opr_linear_k_buf_val_val_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_val_val_0_0_U : component image_filter_Resize_opr_linear_k_buf_val_val_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_val_val_0_0_address0,
        ce0 => k_buf_val_val_0_0_ce0,
        q0 => k_buf_val_val_0_0_q0,
        address1 => k_buf_val_val_0_0_address1,
        ce1 => k_buf_val_val_0_0_ce1,
        we1 => k_buf_val_val_0_0_we1,
        d1 => k_buf_val_val_0_0_d1);

    k_buf_val_val_1_0_U : component image_filter_Resize_opr_linear_k_buf_val_val_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_val_val_1_0_address0,
        ce0 => k_buf_val_val_1_0_ce0,
        q0 => k_buf_val_val_1_0_q0,
        address1 => k_buf_val_val_1_0_address1,
        ce1 => k_buf_val_val_1_0_ce1,
        we1 => k_buf_val_val_1_0_we1,
        d1 => k_buf_val_val_1_0_d1);

    image_filter_udiv_43ns_27ns_43_47_seq_U21 : component image_filter_udiv_43ns_27ns_43_47_seq
    generic map (
        ID => 1,
        NUM_STAGE => 47,
        din0_WIDTH => 43,
        din1_WIDTH => 27,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_364_ap_start,
        done => grp_fu_364_ap_done,
        din0 => grp_fu_364_p0,
        din1 => grp_fu_364_p1,
        ce => grp_fu_364_ce,
        dout => grp_fu_364_p2);

    image_filter_udiv_43ns_27ns_43_47_seq_U22 : component image_filter_udiv_43ns_27ns_43_47_seq
    generic map (
        ID => 1,
        NUM_STAGE => 47,
        din0_WIDTH => 43,
        din1_WIDTH => 27,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_390_ap_start,
        done => grp_fu_390_ap_done,
        din0 => grp_fu_390_p0,
        din1 => grp_fu_390_p1,
        ce => grp_fu_390_ce,
        dout => grp_fu_390_p2);

    image_filter_udiv_27ns_27ns_27_31_U23 : component image_filter_udiv_27ns_27ns_27_31
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 27,
        din1_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_21_reg_1771,
        din1 => grp_fu_683_p1,
        ce => grp_fu_683_ce,
        dout => grp_fu_683_p2);

    image_filter_udiv_27ns_27ns_27_31_U24 : component image_filter_udiv_27ns_27ns_27_31
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 27,
        din1_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_695_p0,
        din1 => grp_fu_695_p1,
        ce => grp_fu_695_ce,
        dout => grp_fu_695_p2);

    image_filter_mul_32s_12s_32_3_U25 : component image_filter_mul_32s_12s_32_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_729_p0,
        din1 => ap_reg_phiprechg_dy_reg_301pp0_it31,
        ce => grp_fu_729_ce,
        dout => grp_fu_729_p2);

    image_filter_mul_32s_12s_32_3_U26 : component image_filter_mul_32s_12s_32_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_738_p0,
        din1 => ap_reg_phiprechg_dx_reg_310pp0_it31,
        ce => grp_fu_738_ce,
        dout => grp_fu_738_p2);

    image_filter_mul_28s_20s_47_3_U27 : component image_filter_mul_28s_20s_47_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 28,
        din1_WIDTH => 20,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_reg_1992,
        din1 => v1_V_reg_1977,
        ce => grp_fu_1270_ce,
        dout => grp_fu_1270_p2);

    image_filter_mul_28s_20s_47_3_U28 : component image_filter_mul_28s_20s_47_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 28,
        din1_WIDTH => 20,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_6_reg_1997,
        din1 => p_u_V_reg_1982,
        ce => grp_fu_1282_ce,
        dout => grp_fu_1282_p2);

    image_filter_mul_28s_20s_47_3_U29 : component image_filter_mul_28s_20s_47_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 28,
        din1_WIDTH => 20,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_7_reg_2002,
        din1 => grp_fu_1294_p1,
        ce => grp_fu_1294_ce,
        dout => grp_fu_1294_p2);

    image_filter_mul_28s_20s_47_3_U30 : component image_filter_mul_28s_20s_47_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 28,
        din1_WIDTH => 20,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_8_reg_2007,
        din1 => grp_fu_1303_p1,
        ce => grp_fu_1303_ce,
        dout => grp_fu_1303_p2);

    image_filter_mul_mul_20s_8ns_28_1_U31 : component image_filter_mul_mul_20s_8ns_28_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => p_u_V_fu_1212_p3,
        din1 => r_V_8_fu_1516_p1,
        dout => r_V_8_fu_1516_p2);

    image_filter_mul_mul_20s_8ns_28_1_U32 : component image_filter_mul_mul_20s_8ns_28_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_7_fu_1522_p0,
        din1 => r_V_7_fu_1522_p1,
        dout => r_V_7_fu_1522_p2);

    image_filter_mul_mul_20s_8ns_28_1_U33 : component image_filter_mul_mul_20s_8ns_28_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_fu_1528_p0,
        din1 => r_V_fu_1528_p1,
        dout => r_V_fu_1528_p2);

    image_filter_mul_mul_20s_8ns_28_1_U34 : component image_filter_mul_mul_20s_8ns_28_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => v1_V_fu_1207_p2,
        din1 => r_V_6_fu_1534_p1,
        dout => r_V_6_fu_1534_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = exitcond_fu_672_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and (exitcond1_fu_627_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and (exitcond1_fu_627_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it32 assign process. --
    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it33 assign process. --
    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it34 assign process. --
    ap_reg_ppiten_pp0_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it35 assign process. --
    ap_reg_ppiten_pp0_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it36 assign process. --
    ap_reg_ppiten_pp0_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it37 assign process. --
    ap_reg_ppiten_pp0_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it35))) then 
                        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it35)) then 
                        ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it38 assign process. --
    ap_reg_ppiten_pp0_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it39 assign process. --
    ap_reg_ppiten_pp0_it39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it40 assign process. --
    ap_reg_ppiten_pp0_it40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it41 assign process. --
    ap_reg_ppiten_pp0_it41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it42 assign process. --
    ap_reg_ppiten_pp0_it42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it43 assign process. --
    ap_reg_ppiten_pp0_it43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and (exitcond1_fu_627_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_dx_reg_310pp0_it31 assign process. --
    ap_reg_phiprechg_dx_reg_310pp0_it31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_782) then
                if (ap_sig_bdd_522) then 
                    ap_reg_phiprechg_dx_reg_310pp0_it31 <= tmp_25_fu_716_p2;
                elsif (ap_sig_bdd_526) then 
                    ap_reg_phiprechg_dx_reg_310pp0_it31 <= tmp_54_fu_721_p1;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_dx_reg_310pp0_it31 <= ap_reg_phiprechg_dx_reg_310pp0_it30;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_dy_reg_301pp0_it1 assign process. --
    ap_reg_phiprechg_dy_reg_301pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_398) then
                if (ap_sig_bdd_846) then 
                    ap_reg_phiprechg_dy_reg_301pp0_it1 <= tmp_19_reg_1750;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_dy_reg_301pp0_it1 <= ap_reg_phiprechg_dy_reg_301pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_dy_reg_301pp0_it31 assign process. --
    ap_reg_phiprechg_dy_reg_301pp0_it31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_782) then
                if (ap_sig_bdd_518) then 
                    ap_reg_phiprechg_dy_reg_301pp0_it31 <= tmp_53_fu_712_p1;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_dy_reg_301pp0_it31 <= ap_reg_phiprechg_dy_reg_301pp0_it30;
                end if;
            end if; 
        end if;
    end process;

    -- p_Val2_14_reg_279 assign process. --
    p_Val2_14_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = exitcond_fu_672_p2)))) then 
                p_Val2_14_reg_279 <= i_reg_1745;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then 
                p_Val2_14_reg_279 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_Val2_15_reg_290 assign process. --
    p_Val2_15_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = exitcond_fu_672_p2))) then 
                p_Val2_15_reg_290 <= j_fu_677_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and (exitcond1_fu_627_p2 = ap_const_lv1_0))) then 
                p_Val2_15_reg_290 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- pre_fx_fu_158 assign process. --
    pre_fx_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34))) then 
                pre_fx_fu_158 <= pre_fx_5_fu_1052_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                pre_fx_fu_158 <= ap_const_lv16_FFF6;
            end if; 
        end if;
    end process;

    -- pre_fy_fu_162 assign process. --
    pre_fy_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34))) then 
                pre_fy_fu_162 <= pre_fy_5_fu_978_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                pre_fy_fu_162 <= ap_const_lv16_FFF6;
            end if; 
        end if;
    end process;

    -- row_rd_fu_154 assign process. --
    row_rd_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34))) then 
                row_rd_fu_154 <= row_rd_5_fu_1003_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                row_rd_fu_154 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- row_wr_fu_150 assign process. --
    row_wr_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34))) then 
                row_wr_fu_150 <= row_wr_3_fu_1017_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                row_wr_fu_150 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- win_val_0_val_1_0_fu_170 assign process. --
    win_val_0_val_1_0_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
                win_val_0_val_1_0_fu_170 <= p_src_data_stream_V_dout;
            elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and (ap_const_lv1_0 = row_rd_5_reg_1920) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = tmp_42_reg_1949)))) then 
                win_val_0_val_1_0_fu_170 <= k_buf_val_val_0_0_q0;
            end if; 
        end if;
    end process;

    -- x_fu_166 assign process. --
    x_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)))) then 
                x_fu_166 <= x_1_fu_1102_p2;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and (ap_const_lv1_0 = col_rd_2_fu_1064_p2))) then 
                x_fu_166 <= x_2_fu_959_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                x_fu_166 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it40)))) then
                Range1_all_ones_reg_2090 <= Range1_all_ones_fu_1403_p2;
                Range1_all_zeros_reg_2096 <= Range1_all_zeros_fu_1409_p2;
                p_Val2_27_reg_2075 <= p_Val2_26_fu_1353_p2(43 downto 36);
                signbit_reg_2068 <= p_Val2_26_fu_1353_p2(47 downto 47);
                tmp_63_reg_2080 <= p_Val2_26_fu_1353_p2(35 downto 35);
                tmp_64_reg_2085 <= p_Val2_26_fu_1353_p2(43 downto 43);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it10 <= ap_reg_phiprechg_dy_reg_301pp0_it9;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it11 <= ap_reg_phiprechg_dy_reg_301pp0_it10;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it12 <= ap_reg_phiprechg_dy_reg_301pp0_it11;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it13 <= ap_reg_phiprechg_dy_reg_301pp0_it12;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it13) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it14 <= ap_reg_phiprechg_dy_reg_301pp0_it13;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it15 <= ap_reg_phiprechg_dy_reg_301pp0_it14;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it15) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it16 <= ap_reg_phiprechg_dy_reg_301pp0_it15;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it17 <= ap_reg_phiprechg_dy_reg_301pp0_it16;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it18 <= ap_reg_phiprechg_dy_reg_301pp0_it17;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it18) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it19 <= ap_reg_phiprechg_dy_reg_301pp0_it18;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it2 <= ap_reg_phiprechg_dy_reg_301pp0_it1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it19) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it20 <= ap_reg_phiprechg_dy_reg_301pp0_it19;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it20) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it21 <= ap_reg_phiprechg_dy_reg_301pp0_it20;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it22 <= ap_reg_phiprechg_dy_reg_301pp0_it21;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it23 <= ap_reg_phiprechg_dy_reg_301pp0_it22;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it24 <= ap_reg_phiprechg_dy_reg_301pp0_it23;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it25 <= ap_reg_phiprechg_dy_reg_301pp0_it24;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it26 <= ap_reg_phiprechg_dy_reg_301pp0_it25;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it27 <= ap_reg_phiprechg_dy_reg_301pp0_it26;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it27) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it28 <= ap_reg_phiprechg_dy_reg_301pp0_it27;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it28) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it29 <= ap_reg_phiprechg_dy_reg_301pp0_it28;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it3 <= ap_reg_phiprechg_dy_reg_301pp0_it2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it30 <= ap_reg_phiprechg_dy_reg_301pp0_it29;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it4 <= ap_reg_phiprechg_dy_reg_301pp0_it3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it5 <= ap_reg_phiprechg_dy_reg_301pp0_it4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it6 <= ap_reg_phiprechg_dy_reg_301pp0_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it7 <= ap_reg_phiprechg_dy_reg_301pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it8 <= ap_reg_phiprechg_dy_reg_301pp0_it7;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_phiprechg_dy_reg_301pp0_it9 <= ap_reg_phiprechg_dy_reg_301pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) then
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it36 <= brmerge_demorgan_reg_1961;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it37 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it36;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it38 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it37;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it39 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it38;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it40 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it39;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it41 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it40;
                ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42 <= ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it41;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it10 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it9;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it11 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it10;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it12 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it11;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it13 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it12;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it14 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it13;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it15 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it14;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it16 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it15;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it17 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it16;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it18 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it17;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it19 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it18;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it2 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it1;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it20 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it19;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it21 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it20;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it22 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it21;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it23 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it22;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it24 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it23;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it25 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it24;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it26 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it25;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it27 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it26;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it28 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it27;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it29 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it28;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it3 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it2;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it30 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it29;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it31 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it30;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it32 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it31;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it33 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it32;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it34 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it33;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it4 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it3;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it5 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it4;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it6 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it5;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it7 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it6;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it8 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it7;
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it9 <= ap_reg_ppstg_col_wr_1_reg_1808_pp0_it8;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it10 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it9;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it11 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it10;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it12 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it11;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it13 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it12;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it14 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it13;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it15 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it14;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it16 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it15;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it17 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it16;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it18 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it17;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it19 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it18;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it1;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it20 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it19;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it21 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it20;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it22 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it21;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it23 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it22;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it24 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it23;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it25 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it24;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it26 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it25;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it27 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it26;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it28 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it27;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it29 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it28;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it3 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it2;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it30 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it29;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it31 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it30;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it32 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it31;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it33 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it32;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it34 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it33;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it35 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it34;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it36 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it35;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it4 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it3;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it5 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it4;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it6 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it5;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it7 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it6;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it8 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it7;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it9 <= ap_reg_ppstg_exitcond_reg_1782_pp0_it8;
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it10(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it9(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it11(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it10(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it12(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it11(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it13(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it12(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it14(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it13(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it15(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it14(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it16(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it15(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it17(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it16(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it18(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it17(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it19(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it18(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it2(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it1(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it20(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it19(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it21(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it20(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it22(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it21(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it23(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it22(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it24(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it23(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it25(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it24(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it26(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it25(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it27(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it26(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it28(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it27(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it29(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it28(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it3(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it2(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it30(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it29(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it31(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it30(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it32(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it31(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it33(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it32(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it34(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it33(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it4(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it3(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it5(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it4(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it6(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it5(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it7(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it6(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it8(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it7(10 downto 0);
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it9(10 downto 0) <= ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it8(10 downto 0);
                ap_reg_ppstg_p_Val2_3_reg_1838_pp0_it34 <= p_Val2_3_reg_1838;
                ap_reg_ppstg_tmp_37_reg_1915_pp0_it36 <= tmp_37_reg_1915;
                ap_reg_ppstg_tmp_38_reg_1882_pp0_it35 <= tmp_38_reg_1882;
                ap_reg_ppstg_tmp_38_reg_1882_pp0_it36 <= ap_reg_ppstg_tmp_38_reg_1882_pp0_it35;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it10 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it9;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it11 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it10;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it12 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it11;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it13 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it12;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it14 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it13;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it15 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it14;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it16 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it15;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it17 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it16;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it18 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it17;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it19 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it18;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it2 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it1;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it20 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it19;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it21 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it20;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it22 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it21;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it23 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it22;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it24 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it23;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it25 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it24;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it26 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it25;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it27 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it26;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it28 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it27;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it29 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it28;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it3 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it2;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it30 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it29;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it31 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it30;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it32 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it31;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it33 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it32;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it34 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it33;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it4 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it3;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it5 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it4;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it6 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it5;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it7 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it6;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it8 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it7;
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it9 <= ap_reg_ppstg_tmp_39_reg_1796_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                ap_reg_ppstg_col_wr_1_reg_1808_pp0_it1 <= col_wr_1_reg_1808;
                ap_reg_ppstg_exitcond_reg_1782_pp0_it1 <= exitcond_reg_1782;
                    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it1(10 downto 0) <= i_op_assign_cast_reg_1776(10 downto 0);
                ap_reg_ppstg_tmp_39_reg_1796_pp0_it1 <= tmp_39_reg_1796;
                exitcond_reg_1782 <= exitcond_fu_672_p2;
                    i_op_assign_cast_reg_1776(10 downto 0) <= i_op_assign_cast_fu_668_p1(10 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34))) then
                brmerge_demorgan_reg_1961 <= brmerge_demorgan_fu_1113_p2;
                col_rd_2_reg_1924 <= col_rd_2_fu_1064_p2;
                row_rd_5_reg_1920 <= row_rd_5_fu_1003_p3;
                tmp_30_reg_1895 <= tmp_30_fu_894_p2;
                tmp_35_reg_1905 <= tmp_35_fu_924_p2;
                tmp_37_reg_1915 <= tmp_37_fu_934_p2;
                tmp_59_reg_1900 <= tmp_59_fu_900_p1;
                tmp_60_reg_1910 <= tmp_60_fu_930_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = exitcond_fu_672_p2) and (tmp_16_fu_527_p2 = ap_const_lv1_0))) then
                col_wr_1_reg_1808 <= col_wr_1_fu_706_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48)) then
                i_reg_1745 <= i_fu_632_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)) and not((ap_const_lv1_0 = row_rd_5_fu_1003_p3)))) then
                k_buf_val_val_0_0_addr_reg_1943 <= tmp_41_fu_1080_p1(11 - 1 downto 0);
                or_cond_reg_1957 <= or_cond_fu_1096_p2;
                tmp_42_reg_1949 <= tmp_42_fu_1087_p2;
                tmp_43_reg_1953 <= tmp_43_fu_1091_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it41)))) then
                neg_src_not_i_i_reg_2118 <= neg_src_not_i_i_fu_1474_p2;
                neg_src_reg_2107 <= neg_src_fu_1459_p2;
                p_39_demorgan_i_i_i_reg_2112 <= p_39_demorgan_i_i_i_fu_1464_p2;
                p_Val2_28_reg_2101 <= p_Val2_28_fu_1418_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it32))) then
                p_Val2_1_reg_1843 <= grp_fu_738_p2;
                p_Val2_3_reg_1838 <= p_Val2_3_fu_743_p2;
                ret_V_2_reg_1848 <= p_Val2_3_fu_743_p2(31 downto 16);
                tmp_57_reg_1855 <= p_Val2_3_fu_743_p2(31 downto 31);
                tmp_58_reg_1860 <= tmp_58_fu_766_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it39)))) then
                p_Val2_20_reg_2048 <= grp_fu_1270_p2;
                p_Val2_4_reg_2053 <= grp_fu_1282_p2;
                p_Val2_5_reg_2058 <= grp_fu_1294_p2;
                p_Val2_6_reg_2063 <= grp_fu_1303_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it33))) then
                p_Val2_2_reg_1865 <= p_Val2_2_fu_770_p2;
                sx_2_reg_1870 <= sx_2_fu_816_p3;
                sy_3_reg_1877 <= sy_3_fu_841_p3;
                sy_4_reg_1887 <= sy_4_fu_852_p3;
                tmp_38_reg_1882 <= tmp_38_fu_847_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it36))) then
                    p_u_V_reg_1982(19 downto 2) <= p_u_V_fu_1212_p3(19 downto 2);
                    v1_V_reg_1977(19 downto 2) <= v1_V_fu_1207_p2(19 downto 2);
                    v_V_reg_1987(19 downto 2) <= v_V_fu_1218_p3(19 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it36)))) then
                r_V_6_reg_1997 <= r_V_6_fu_1534_p2;
                r_V_7_reg_2002 <= r_V_7_fu_1522_p2;
                r_V_8_reg_2007 <= r_V_8_fu_1516_p2;
                r_V_reg_1992 <= r_V_fu_1528_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and (exitcond1_fu_627_p2 = ap_const_lv1_0))) then
                row_wr_2_reg_1766 <= row_wr_2_fu_654_p2;
                tmp_19_reg_1750 <= tmp_19_fu_638_p2;
                tmp_20_reg_1760 <= tmp_20_fu_648_p2;
                    tmp_21_reg_1771(26 downto 16) <= tmp_21_fu_660_p3(26 downto 16);
                tmp_45_cast_reg_1755 <= tmp_45_cast_fu_644_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = exitcond_fu_672_p2))) then
                tmp_39_reg_1796 <= tmp_39_fu_700_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)))) then
                tmp_41_reg_1928 <= tmp_41_fu_1080_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                tmp_fu_186 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                    u_V_reg_1965(19 downto 2) <= u_V_fu_1149_p3(19 downto 2);
                    v_V_2_reg_1971(19 downto 2) <= v_V_2_fu_1163_p3(19 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then
                win_val_0_val_1_0_1_fu_174 <= win_val_0_val_1_0_fu_170;
                win_val_1_val_1_0_1_fu_182 <= win_val_1_val_1_0_fu_178;
                win_val_1_val_1_0_fu_178 <= win_val_val_1_0_0_2_phi_fu_322_p10;
            end if;
        end if;
    end process;
    tmp_21_reg_1771(15 downto 0) <= "0000000000000000";
    i_op_assign_cast_reg_1776(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it1(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it2(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it3(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it4(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it5(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it6(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it7(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it8(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it9(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it10(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it11(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it12(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it13(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it14(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it15(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it16(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it17(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it18(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it19(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it20(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it21(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it22(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it23(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it24(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it25(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it26(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it27(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it28(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it29(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it30(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it31(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it32(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it33(11) <= '0';
    ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it34(11) <= '0';
    u_V_reg_1965(1 downto 0) <= "00";
    v_V_2_reg_1971(1 downto 0) <= "00";
    v1_V_reg_1977(1 downto 0) <= "00";
    p_u_V_reg_1982(1 downto 0) <= "00";
    v_V_reg_1987(1 downto 0) <= "00";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_fu_364_ap_done, grp_fu_390_ap_done, exitcond1_fu_627_p2, ap_reg_ppiten_pp0_it35, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it42, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                if (not(((ap_const_logic_0 = grp_fu_364_ap_done) or (ap_const_logic_0 = grp_fu_390_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                else
                    ap_NS_fsm <= ap_ST_st47_fsm_46;
                end if;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                if (not((exitcond1_fu_627_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_49;
                end if;
            when ap_ST_pp0_stg0_fsm_49 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it43) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it42)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it35)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it37)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_49;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it43) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it42))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it35)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it37))))) then
                    ap_NS_fsm <= ap_ST_st49_fsm_48;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_49;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
        OP2_V_8_cast_fu_1291_p1 <= std_logic_vector(resize(signed(v_V_reg_1987),47));

        OP2_V_fu_1236_p1 <= std_logic_vector(resize(signed(u1_V_fu_1202_p2),28));

    Range1_all_ones_fu_1403_p2 <= "1" when (p_Result_4_i_i_fu_1393_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_fu_1409_p2 <= "1" when (p_Result_4_i_i_fu_1393_p4 = ap_const_lv4_0) else "0";

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, exitcond1_fu_627_p2, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not((exitcond1_fu_627_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond1_fu_627_p2, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not((exitcond1_fu_627_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_dx_reg_310pp0_it30 <= "XXXXXXXXXXXX";
    ap_reg_phiprechg_dy_reg_301pp0_it0 <= "XXXXXXXXXXXX";
    ap_reg_phiprechg_win_val_val_1_0_0_2_reg_319pp0_it36 <= "XXXXXXXX";

    -- ap_sig_bdd_119 assign process. --
    ap_sig_bdd_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_119 <= (ap_const_lv1_1 = ap_CS_fsm(46 downto 46));
    end process;


    -- ap_sig_bdd_153 assign process. --
    ap_sig_bdd_153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_153 <= (ap_const_lv1_1 = ap_CS_fsm(47 downto 47));
    end process;


    -- ap_sig_bdd_172 assign process. --
    ap_sig_bdd_172_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_172 <= (ap_const_lv1_1 = ap_CS_fsm(48 downto 48));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_196 <= (ap_const_lv1_1 = ap_CS_fsm(49 downto 49));
    end process;


    -- ap_sig_bdd_1977 assign process. --
    ap_sig_bdd_1977_assign_proc : process(ap_reg_ppiten_pp0_it35, ap_reg_ppstg_exitcond_reg_1782_pp0_it34, col_rd_2_fu_1064_p2)
    begin
                ap_sig_bdd_1977 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)));
    end process;


    -- ap_sig_bdd_1980 assign process. --
    ap_sig_bdd_1980_assign_proc : process(or_cond_reg_1957, tmp_42_reg_1949, tmp_43_reg_1953)
    begin
                ap_sig_bdd_1980 <= ((ap_const_lv1_0 = or_cond_reg_1957) and not((ap_const_lv1_0 = tmp_42_reg_1949)) and (ap_const_lv1_0 = tmp_43_reg_1953));
    end process;


    -- ap_sig_bdd_287 assign process. --
    ap_sig_bdd_287_assign_proc : process(p_src_data_stream_V_empty_n, ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, or_cond_reg_1957)
    begin
                ap_sig_bdd_287 <= ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)));
    end process;


    -- ap_sig_bdd_309 assign process. --
    ap_sig_bdd_309_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42)
    begin
                ap_sig_bdd_309 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42)));
    end process;


    -- ap_sig_bdd_398 assign process. --
    ap_sig_bdd_398_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_reg_ppiten_pp0_it0, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
                ap_sig_bdd_398 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))));
    end process;


    -- ap_sig_bdd_518 assign process. --
    ap_sig_bdd_518_assign_proc : process(tmp_15_fu_521_p2, ap_reg_ppstg_exitcond_reg_1782_pp0_it29)
    begin
                ap_sig_bdd_518 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it29) and not((tmp_15_fu_521_p2 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_522 assign process. --
    ap_sig_bdd_522_assign_proc : process(tmp_16_fu_527_p2, ap_reg_ppstg_exitcond_reg_1782_pp0_it29)
    begin
                ap_sig_bdd_522 <= ((tmp_16_fu_527_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it29));
    end process;


    -- ap_sig_bdd_526 assign process. --
    ap_sig_bdd_526_assign_proc : process(tmp_16_fu_527_p2, ap_reg_ppstg_exitcond_reg_1782_pp0_it29)
    begin
                ap_sig_bdd_526 <= (not((tmp_16_fu_527_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it29));
    end process;


    -- ap_sig_bdd_68 assign process. --
    ap_sig_bdd_68_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_68 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_782 assign process. --
    ap_sig_bdd_782_assign_proc : process(ap_reg_ppiten_pp0_it30, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
                ap_sig_bdd_782 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))));
    end process;


    -- ap_sig_bdd_846 assign process. --
    ap_sig_bdd_846_assign_proc : process(tmp_15_fu_521_p2, exitcond_fu_672_p2)
    begin
                ap_sig_bdd_846 <= ((ap_const_lv1_0 = exitcond_fu_672_p2) and (tmp_15_fu_521_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_889 assign process. --
    ap_sig_bdd_889_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, ap_reg_ppiten_pp0_it36)
    begin
                ap_sig_bdd_889 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_49 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_49_assign_proc : process(ap_sig_bdd_196)
    begin
        if (ap_sig_bdd_196) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_49 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_49 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_68)
    begin
        if (ap_sig_bdd_68) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_46 assign process. --
    ap_sig_cseq_ST_st47_fsm_46_assign_proc : process(ap_sig_bdd_119)
    begin
        if (ap_sig_bdd_119) then 
            ap_sig_cseq_ST_st47_fsm_46 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_46 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st48_fsm_47 assign process. --
    ap_sig_cseq_ST_st48_fsm_47_assign_proc : process(ap_sig_bdd_153)
    begin
        if (ap_sig_bdd_153) then 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st49_fsm_48 assign process. --
    ap_sig_cseq_ST_st49_fsm_48_assign_proc : process(ap_sig_bdd_172)
    begin
        if (ap_sig_bdd_172) then 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_demorgan_fu_1113_p2 <= (row_wr_3_fu_1017_p3 and col_wr_2_fu_1069_p3);
    brmerge_i_i_fu_1489_p2 <= (neg_src_not_i_i_reg_2118 or p_39_demorgan_i_not_i_i_fu_1484_p2);
    brmerge_i_i_not_i_i_fu_1480_p2 <= (p_39_demorgan_i_i_i_reg_2112 and neg_src_not_i_i_reg_2118);
    carry_fu_1437_p2 <= (tmp_64_reg_2085 and tmp_2_i_i_fu_1431_p2);
    col_rd_2_fu_1064_p2 <= (tmp2_fu_1059_p2 or ap_reg_ppstg_tmp_39_reg_1796_pp0_it34);
    col_wr_1_fu_706_p2 <= "0" when (p_Val2_15_reg_290 = ap_const_lv11_0) else "1";
    col_wr_2_fu_1069_p3 <= 
        col_wr_fu_1033_p2 when (tmp_16_fu_527_p2(0) = '1') else 
        ap_reg_ppstg_col_wr_1_reg_1808_pp0_it34;
    col_wr_fu_1033_p2 <= "1" when (pre_fx_1_fu_938_p3 = tmp_85_cast_fu_1029_p1) else "0";
    cols_fu_574_p3 <= 
        p_src_cols_V_read when (tmp_13_fu_565_p2(0) = '1') else 
        tmp_14_fu_569_p2;
    deleted_zeros_fu_1442_p3 <= 
        Range1_all_ones_reg_2090 when (carry_fu_1437_p2(0) = '1') else 
        Range1_all_zeros_reg_2096;
    exitcond1_fu_627_p2 <= "1" when (p_Val2_14_reg_279 = rows_fu_558_p3) else "0";
    exitcond_fu_672_p2 <= "1" when (p_Val2_15_reg_290 = cols_fu_574_p3) else "0";

    -- grp_fu_1270_ce assign process. --
    grp_fu_1270_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_1270_ce <= ap_const_logic_1;
        else 
            grp_fu_1270_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_1282_ce assign process. --
    grp_fu_1282_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_1282_ce <= ap_const_logic_1;
        else 
            grp_fu_1282_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_1294_ce assign process. --
    grp_fu_1294_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_1294_ce <= ap_const_logic_1;
        else 
            grp_fu_1294_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1294_p1 <= OP2_V_8_cast_fu_1291_p1(20 - 1 downto 0);

    -- grp_fu_1303_ce assign process. --
    grp_fu_1303_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_1303_ce <= ap_const_logic_1;
        else 
            grp_fu_1303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1303_p1 <= OP2_V_8_cast_fu_1291_p1(20 - 1 downto 0);

    -- grp_fu_364_ap_start assign process. --
    grp_fu_364_ap_start_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            grp_fu_364_ap_start <= ap_const_logic_1;
        else 
            grp_fu_364_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_364_ce <= ap_const_logic_1;
    grp_fu_364_p0 <= (p_src_rows_V_read & ap_const_lv32_0);
    grp_fu_364_p1 <= grp_fu_364_p10(27 - 1 downto 0);
    grp_fu_364_p10 <= std_logic_vector(resize(unsigned(tmp_s_fu_344_p3),43));

    -- grp_fu_390_ap_start assign process. --
    grp_fu_390_ap_start_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            grp_fu_390_ap_start <= ap_const_logic_1;
        else 
            grp_fu_390_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_390_ce <= ap_const_logic_1;
    grp_fu_390_p0 <= (p_src_cols_V_read & ap_const_lv32_0);
    grp_fu_390_p1 <= grp_fu_390_p10(27 - 1 downto 0);
    grp_fu_390_p10 <= std_logic_vector(resize(unsigned(tmp_7_fu_370_p3),43));

    -- grp_fu_683_ce assign process. --
    grp_fu_683_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_683_ce <= ap_const_logic_1;
        else 
            grp_fu_683_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_683_p1 <= grp_fu_364_p2(27 - 1 downto 0);

    -- grp_fu_695_ce assign process. --
    grp_fu_695_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_695_ce <= ap_const_logic_1;
        else 
            grp_fu_695_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_695_p0 <= (p_Val2_15_reg_290 & ap_const_lv16_0);
    grp_fu_695_p1 <= grp_fu_390_p2(27 - 1 downto 0);

    -- grp_fu_729_ce assign process. --
    grp_fu_729_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_729_ce <= ap_const_logic_1;
        else 
            grp_fu_729_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_729_p0 <= grp_fu_364_p2(32 - 1 downto 0);

    -- grp_fu_738_ce assign process. --
    grp_fu_738_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_49, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_49) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            grp_fu_738_ce <= ap_const_logic_1;
        else 
            grp_fu_738_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_738_p0 <= grp_fu_390_p2(32 - 1 downto 0);
    i_fu_632_p2 <= std_logic_vector(unsigned(p_Val2_14_reg_279) + unsigned(ap_const_lv11_1));
    i_op_assign_11_cast_fu_623_p1 <= std_logic_vector(resize(unsigned(p_Val2_14_reg_279),12));
    i_op_assign_cast_fu_668_p1 <= std_logic_vector(resize(unsigned(p_Val2_15_reg_290),12));
    j_fu_677_p2 <= std_logic_vector(unsigned(p_Val2_15_reg_290) + unsigned(ap_const_lv11_1));
    k_buf_val_val_0_0_addr_gep_fu_257_p3 <= tmp_41_fu_1080_p1(11 - 1 downto 0);

    -- k_buf_val_val_0_0_address0 assign process. --
    k_buf_val_val_0_0_address0_assign_proc : process(row_rd_5_fu_1003_p3, tmp_41_fu_1080_p1, k_buf_val_val_0_0_addr_gep_fu_257_p3, ap_sig_bdd_1977)
    begin
        if (ap_sig_bdd_1977) then
            if (not((ap_const_lv1_0 = row_rd_5_fu_1003_p3))) then 
                k_buf_val_val_0_0_address0 <= k_buf_val_val_0_0_addr_gep_fu_257_p3;
            elsif ((ap_const_lv1_0 = row_rd_5_fu_1003_p3)) then 
                k_buf_val_val_0_0_address0 <= tmp_41_fu_1080_p1(11 - 1 downto 0);
            else 
                k_buf_val_val_0_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            k_buf_val_val_0_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    k_buf_val_val_0_0_address1 <= k_buf_val_val_0_0_addr_reg_1943;

    -- k_buf_val_val_0_0_ce0 assign process. --
    k_buf_val_val_0_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it35, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43, ap_reg_ppstg_exitcond_reg_1782_pp0_it34, row_rd_5_fu_1003_p3, col_rd_2_fu_1064_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)) and (ap_const_lv1_0 = row_rd_5_fu_1003_p3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it34) and not((ap_const_lv1_0 = col_rd_2_fu_1064_p2)) and not((ap_const_lv1_0 = row_rd_5_fu_1003_p3))))) then 
            k_buf_val_val_0_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_val_val_0_0_ce1 assign process. --
    k_buf_val_val_0_0_ce1_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, or_cond_reg_1957, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43, tmp_42_reg_1949, tmp_43_reg_1953)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = tmp_42_reg_1949)) and (ap_const_lv1_0 = tmp_43_reg_1953)))) then 
            k_buf_val_val_0_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_val_val_0_0_d1 assign process. --
    k_buf_val_val_0_0_d1_assign_proc : process(p_src_data_stream_V_dout, or_cond_reg_1957, tmp_fu_186, ap_sig_bdd_1980, ap_sig_bdd_889)
    begin
        if (ap_sig_bdd_889) then
            if (not((ap_const_lv1_0 = or_cond_reg_1957))) then 
                k_buf_val_val_0_0_d1 <= p_src_data_stream_V_dout;
            elsif (ap_sig_bdd_1980) then 
                k_buf_val_val_0_0_d1 <= tmp_fu_186;
            else 
                k_buf_val_val_0_0_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_val_val_0_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_val_val_0_0_we1 assign process. --
    k_buf_val_val_0_0_we1_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, or_cond_reg_1957, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43, tmp_42_reg_1949, tmp_43_reg_1953)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))) and not((ap_const_lv1_0 = tmp_42_reg_1949)) and (ap_const_lv1_0 = tmp_43_reg_1953)))) then 
            k_buf_val_val_0_0_we1 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_val_val_1_0_address0 <= tmp_41_fu_1080_p1(11 - 1 downto 0);
    k_buf_val_val_1_0_address1 <= tmp_41_reg_1928(11 - 1 downto 0);

    -- k_buf_val_val_1_0_ce0 assign process. --
    k_buf_val_val_1_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it35, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            k_buf_val_val_1_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_val_val_1_0_ce1 assign process. --
    k_buf_val_val_1_0_ce1_assign_proc : process(ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            k_buf_val_val_1_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_val_val_1_0_d1 <= k_buf_val_val_0_0_q0;

    -- k_buf_val_val_1_0_we1 assign process. --
    k_buf_val_val_1_0_we1_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43))))))) then 
            k_buf_val_val_1_0_we1 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    neg_src_fu_1459_p2 <= (signbit_reg_2068 and tmp_3_i_i_fu_1453_p2);
    neg_src_not_i_i_fu_1474_p2 <= (p_38_i_i_i_fu_1448_p2 or signbit_not_fu_1469_p2);
    not_1_fu_948_p2 <= "0" when (sy_4_reg_1887 = pre_fy_fu_162) else "1";
    not_s_fu_1039_p2 <= "0" when (pre_fx_1_fu_938_p3 = pre_fx_2_fu_985_p3) else "1";
    or_cond_fu_1096_p2 <= (tmp_42_fu_1087_p2 and tmp_43_fu_1091_p2);
    p_38_i_i_i_fu_1448_p2 <= (carry_fu_1437_p2 and Range1_all_ones_reg_2090);
    p_39_demorgan_i_i_i_fu_1464_p2 <= (deleted_zeros_fu_1442_p3 or signbit_reg_2068);
    p_39_demorgan_i_not_i_i_fu_1484_p2 <= (p_39_demorgan_i_i_i_reg_2112 xor ap_const_lv1_1);
    p_6_fu_808_p3 <= 
        ret_V_fu_774_p4 when (tmp_26_fu_796_p2(0) = '1') else 
        ret_V_1_fu_802_p2;
    p_7_fu_834_p3 <= 
        ret_V_2_reg_1848 when (tmp_27_fu_824_p2(0) = '1') else 
        ret_V_3_fu_829_p2;
    p_Result_4_i_i_fu_1393_p4 <= p_Val2_26_fu_1353_p2(47 downto 44);
    p_Val2_11_fu_497_p2 <= std_logic_vector(signed(ap_const_lv27_7FF8000) + signed(tmp_34_cast_cast_fu_493_p1));
    p_Val2_12_fu_503_p4 <= p_Val2_11_fu_497_p2(25 downto 6);
    p_Val2_16_fu_536_p2 <= std_logic_vector(unsigned(tmp_1_fu_533_p1) + unsigned(p_Val2_8_fu_465_p4));
    p_Val2_17_fu_544_p2 <= std_logic_vector(unsigned(tmp_2_fu_541_p1) + unsigned(p_Val2_12_fu_503_p4));
    p_Val2_23_fu_1315_p2 <= std_logic_vector(signed(p_Val2_4_cast_fu_1312_p1) + signed(p_Val2_49_cast_fu_1309_p1));
    p_Val2_26_fu_1353_p2 <= std_logic_vector(unsigned(tmp28_cast_fu_1349_p1) + unsigned(tmp_44_fu_1328_p1));
    p_Val2_28_fu_1418_p2 <= std_logic_vector(unsigned(p_Val2_27_reg_2075) + unsigned(tmp_1_i_i_fu_1415_p1));
    p_Val2_2_fu_770_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_1843) + unsigned(tmp_62_cast_fu_619_p1));
    p_Val2_3_fu_743_p2 <= std_logic_vector(unsigned(grp_fu_729_p2) + unsigned(tmp_60_cast_fu_607_p1));
        p_Val2_49_cast_fu_1309_p1 <= std_logic_vector(resize(signed(p_Val2_20_reg_2048),48));

        p_Val2_4_cast_fu_1312_p1 <= std_logic_vector(resize(signed(p_Val2_4_reg_2053),48));

        p_Val2_50_cast_fu_1321_p1 <= std_logic_vector(resize(signed(p_Val2_23_fu_1315_p2),49));

        p_Val2_5_cast_fu_1325_p1 <= std_logic_vector(resize(signed(p_Val2_5_reg_2058),48));

        p_Val2_6_cast_fu_1336_p1 <= std_logic_vector(resize(signed(p_Val2_6_reg_2063),48));

    p_Val2_7_fu_459_p2 <= std_logic_vector(signed(ap_const_lv27_7FF8000) + signed(tmp_30_cast_cast_fu_455_p1));
    p_Val2_8_fu_465_p4 <= p_Val2_7_fu_459_p2(25 downto 6);
    p_dst_data_stream_V_din <= 
        p_mux_i_i_fu_1494_p3 when (brmerge_i_i_fu_1489_p2(0) = '1') else 
        p_i_i_fu_1501_p3;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_demorgan_reg_1961_pp0_it42)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_1501_p3 <= 
        ap_const_lv8_0 when (neg_src_reg_2107(0) = '1') else 
        p_Val2_28_reg_2101;
    p_lshr_f1_cast_fu_445_p4 <= grp_fu_364_p2(26 downto 1);
    p_lshr_f_cast_fu_483_p4 <= grp_fu_390_p2(26 downto 1);
    p_mux_i_i_fu_1494_p3 <= 
        p_Val2_28_reg_2101 when (brmerge_i_i_not_i_i_fu_1480_p2(0) = '1') else 
        ap_const_lv8_FF;

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, or_cond_reg_1957, ap_sig_bdd_287, ap_reg_ppiten_pp0_it36, ap_sig_bdd_309, ap_reg_ppiten_pp0_it43)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not(((ap_sig_bdd_287 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or (ap_sig_bdd_309 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it43)))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_u_V_fu_1212_p3 <= 
        ap_const_lv20_0 when (ap_reg_ppstg_tmp_37_reg_1915_pp0_it36(0) = '1') else 
        u_V_reg_1965;
    pre_fx_1_fu_938_p3 <= 
        tmp_41_cast_fu_586_p1 when (tmp_37_fu_934_p2(0) = '1') else 
        sx_2_reg_1870;
    pre_fx_2_fu_985_p3 <= 
        ap_const_lv16_FFF6 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        pre_fx_fu_158;
    pre_fx_2_sx_fu_1045_p3 <= 
        ap_const_lv16_FFF6 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        pre_fx_1_fu_938_p3;
    pre_fx_5_fu_1052_p3 <= 
        pre_fx_2_fu_985_p3 when (tmp_16_fu_527_p2(0) = '1') else 
        pre_fx_2_sx_fu_1045_p3;
    pre_fy_1_sy_fu_953_p3 <= 
        pre_fy_fu_162 when (tmp_20_reg_1760(0) = '1') else 
        sy_4_reg_1887;
    pre_fy_5_fu_978_p3 <= 
        sel_tmp5_fu_970_p3 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        pre_fy_fu_162;
    r_V_3_fu_888_p2 <= std_logic_vector(signed(tmp_28_fu_874_p1) - signed(tmp_67_cast_fu_884_p1));
    r_V_4_fu_918_p2 <= std_logic_vector(signed(tmp_32_fu_904_p1) - signed(tmp_73_cast_fu_914_p1));
    r_V_6_fu_1534_p1 <= r_V_6_fu_1534_p10(8 - 1 downto 0);
    r_V_6_fu_1534_p10 <= std_logic_vector(resize(unsigned(win_val_1_val_1_0_fu_178),28));
    r_V_7_fu_1522_p0 <= OP2_V_fu_1236_p1(20 - 1 downto 0);
    r_V_7_fu_1522_p1 <= r_V_7_fu_1522_p10(8 - 1 downto 0);
    r_V_7_fu_1522_p10 <= std_logic_vector(resize(unsigned(win_val_0_val_1_0_1_fu_174),28));
    r_V_8_fu_1516_p1 <= r_V_8_fu_1516_p10(8 - 1 downto 0);
    r_V_8_fu_1516_p10 <= std_logic_vector(resize(unsigned(win_val_0_val_1_0_fu_170),28));
    r_V_fu_1528_p0 <= OP2_V_fu_1236_p1(20 - 1 downto 0);
    r_V_fu_1528_p1 <= r_V_fu_1528_p10(8 - 1 downto 0);
    r_V_fu_1528_p10 <= std_logic_vector(resize(unsigned(win_val_1_val_1_0_1_fu_182),28));
    ret_V_1_fu_802_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_fu_774_p4));
    ret_V_3_fu_829_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_2_reg_1848));
    ret_V_fu_774_p4 <= p_Val2_2_fu_770_p2(31 downto 16);
    row_rd_5_fu_1003_p3 <= 
        sel_tmp_fu_998_p2 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        row_rd_fu_154;
    row_wr_1_fu_944_p2 <= "1" when (sy_4_reg_1887 = tmp_45_cast_reg_1755) else "0";
    row_wr_2_fu_654_p2 <= "0" when (p_Val2_14_reg_279 = ap_const_lv11_0) else "1";
    row_wr_3_fu_1017_p3 <= 
        row_wr_4_fu_1010_p3 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        row_wr_fu_150;
    row_wr_4_fu_1010_p3 <= 
        row_wr_1_fu_944_p2 when (sel_tmp4_fu_966_p2(0) = '1') else 
        row_wr_2_reg_1766;
    rows_fu_558_p3 <= 
        p_src_rows_V_read when (tmp_10_fu_549_p2(0) = '1') else 
        tmp_12_fu_553_p2;
    sel_tmp4_fu_966_p2 <= (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34 and tmp_15_fu_521_p2);
    sel_tmp5_fu_970_p3 <= 
        pre_fy_fu_162 when (sel_tmp4_fu_966_p2(0) = '1') else 
        pre_fy_1_sy_fu_953_p3;
    sel_tmp_fu_998_p2 <= (tmp1_fu_992_p2 or tmp_20_reg_1760);
    signbit_not_fu_1469_p2 <= (signbit_reg_2068 xor ap_const_lv1_1);
    sx_2_fu_816_p3 <= 
        p_6_fu_808_p3 when (tmp_55_fu_784_p3(0) = '1') else 
        ret_V_fu_774_p4;
    sx_fu_581_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(p_src_cols_V_read));
    sy_3_fu_841_p3 <= 
        p_7_fu_834_p3 when (tmp_57_reg_1855(0) = '1') else 
        ret_V_2_reg_1848;
    sy_4_fu_852_p3 <= 
        tmp_42_cast_fu_595_p1 when (tmp_38_fu_847_p2(0) = '1') else 
        sy_3_fu_841_p3;
    sy_fu_590_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(p_src_rows_V_read));
    tmp1_fu_992_p2 <= (not_1_fu_948_p2 or sel_tmp4_fu_966_p2);
    tmp28_cast_fu_1349_p1 <= std_logic_vector(resize(unsigned(tmp3_fu_1343_p2),50));
    tmp2_fu_1059_p2 <= (not_s_fu_1039_p2 or tmp_16_fu_527_p2);
    tmp3_fu_1343_p2 <= std_logic_vector(unsigned(tmp_54_cast_fu_1332_p1) + unsigned(tmp_1398_cast_cast_fu_1339_p1));
    tmp_10_fu_549_p2 <= "1" when (unsigned(p_src_rows_V_read) > unsigned(p_dst_rows_V_read)) else "0";
    tmp_11_fu_425_p1 <= grp_fu_364_p2(28 - 1 downto 0);
    tmp_12_fu_553_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(p_dst_rows_V_read));
    tmp_1398_cast_cast_fu_1339_p1 <= std_logic_vector(resize(unsigned(p_Val2_6_cast_fu_1336_p1),49));
    tmp_13_fu_565_p2 <= "1" when (unsigned(p_src_cols_V_read) > unsigned(p_dst_cols_V_read)) else "0";
    tmp_14_fu_569_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(p_dst_cols_V_read));
    tmp_15_fu_521_p2 <= "1" when (signed(tmp_11_fu_425_p1) > signed(ap_const_lv28_10000)) else "0";
    tmp_16_fu_527_p2 <= "1" when (signed(tmp_47_fu_437_p1) > signed(ap_const_lv28_10000)) else "0";
    tmp_17_fu_599_p3 <= (p_Val2_16_fu_536_p2 & ap_const_lv6_0);
    tmp_18_fu_611_p3 <= (p_Val2_17_fu_544_p2 & ap_const_lv6_0);
    tmp_19_fu_638_p2 <= std_logic_vector(unsigned(i_op_assign_11_cast_fu_623_p1) + unsigned(ap_const_lv12_FFF));
    tmp_1_fu_533_p1 <= std_logic_vector(resize(unsigned(tmp_51_fu_475_p3),20));
    tmp_1_i_i_fu_1415_p1 <= std_logic_vector(resize(unsigned(tmp_63_reg_2080),8));
    tmp_20_fu_648_p2 <= "1" when (p_Val2_14_reg_279 = ap_const_lv11_0) else "0";
    tmp_21_fu_660_p3 <= (p_Val2_14_reg_279 & ap_const_lv16_0);
    tmp_25_fu_716_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it29) + unsigned(ap_const_lv12_FFF));
    tmp_26_fu_796_p2 <= "1" when (tmp_56_fu_792_p1 = ap_const_lv16_0) else "0";
    tmp_27_fu_824_p2 <= "1" when (tmp_58_reg_1860 = ap_const_lv16_0) else "0";
        tmp_28_fu_874_p1 <= std_logic_vector(resize(signed(p_Val2_2_reg_1865),33));

    tmp_29_fu_877_p3 <= (sx_2_reg_1870 & ap_const_lv16_0);
    tmp_2_fu_541_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_513_p3),20));
    tmp_2_i_i_fu_1431_p2 <= (tmp_65_fu_1423_p3 xor ap_const_lv1_1);
    tmp_30_cast_cast_fu_455_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_cast_fu_445_p4),27));
    tmp_30_fu_894_p2 <= "1" when (signed(r_V_3_fu_888_p2) > signed(ap_const_lv33_0)) else "0";
    tmp_31_fu_1142_p3 <= (tmp_59_reg_1900 & ap_const_lv2_0);
        tmp_32_fu_904_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_p_Val2_3_reg_1838_pp0_it34),33));

    tmp_34_cast_cast_fu_493_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_cast_fu_483_p4),27));
    tmp_34_fu_907_p3 <= (sy_3_reg_1877 & ap_const_lv16_0);
    tmp_35_fu_924_p2 <= "1" when (signed(r_V_4_fu_918_p2) > signed(ap_const_lv33_0)) else "0";
    tmp_36_fu_1156_p3 <= (tmp_60_reg_1910 & ap_const_lv2_0);
    tmp_37_fu_934_p2 <= "1" when (signed(sx_2_reg_1870) > signed(tmp_41_cast_fu_586_p1)) else "0";
    tmp_38_fu_847_p2 <= "1" when (signed(sy_3_fu_841_p3) > signed(tmp_42_cast_fu_595_p1)) else "0";
    tmp_39_fu_700_p2 <= "1" when (p_Val2_15_reg_290 = ap_const_lv11_0) else "0";
    tmp_3_i_i_fu_1453_p2 <= (p_38_i_i_i_fu_1448_p2 xor ap_const_lv1_1);
    tmp_40_fu_1024_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(ap_reg_ppstg_i_op_assign_cast_reg_1776_pp0_it34));
    tmp_41_cast_fu_586_p1 <= std_logic_vector(resize(unsigned(sx_fu_581_p2),16));
        tmp_41_fu_1080_p1 <= std_logic_vector(resize(signed(x_2_fu_959_p3),64));

    tmp_42_cast_fu_595_p1 <= std_logic_vector(resize(unsigned(sy_fu_590_p2),16));
    tmp_42_fu_1087_p2 <= "1" when (signed(sy_4_reg_1887) < signed(tmp_42_cast_fu_595_p1)) else "0";
    tmp_43_fu_1091_p2 <= "1" when (signed(pre_fx_1_fu_938_p3) < signed(tmp_41_cast_fu_586_p1)) else "0";
    tmp_44_fu_1328_p1 <= std_logic_vector(resize(unsigned(p_Val2_50_cast_fu_1321_p1),50));
        tmp_45_cast_fu_644_p1 <= std_logic_vector(resize(signed(tmp_19_fu_638_p2),16));

    tmp_47_fu_437_p1 <= grp_fu_390_p2(28 - 1 downto 0);
    tmp_51_fu_475_p3 <= p_Val2_7_fu_459_p2(5 downto 5);
    tmp_52_fu_513_p3 <= p_Val2_11_fu_497_p2(5 downto 5);
    tmp_53_fu_712_p1 <= grp_fu_683_p2(12 - 1 downto 0);
    tmp_54_cast_fu_1332_p1 <= std_logic_vector(resize(unsigned(p_Val2_5_cast_fu_1325_p1),49));
    tmp_54_fu_721_p1 <= grp_fu_695_p2(12 - 1 downto 0);
    tmp_55_fu_784_p3 <= p_Val2_2_fu_770_p2(31 downto 31);
    tmp_56_fu_792_p1 <= p_Val2_2_fu_770_p2(16 - 1 downto 0);
    tmp_58_fu_766_p1 <= p_Val2_3_fu_743_p2(16 - 1 downto 0);
    tmp_59_fu_900_p1 <= r_V_3_fu_888_p2(18 - 1 downto 0);
        tmp_60_cast_fu_607_p1 <= std_logic_vector(resize(signed(tmp_17_fu_599_p3),32));

    tmp_60_fu_930_p1 <= r_V_4_fu_918_p2(18 - 1 downto 0);
        tmp_62_cast_fu_619_p1 <= std_logic_vector(resize(signed(tmp_18_fu_611_p3),32));

    tmp_65_fu_1423_p3 <= p_Val2_28_fu_1418_p2(7 downto 7);
        tmp_67_cast_fu_884_p1 <= std_logic_vector(resize(signed(tmp_29_fu_877_p3),33));

        tmp_73_cast_fu_914_p1 <= std_logic_vector(resize(signed(tmp_34_fu_907_p3),33));

    tmp_7_fu_370_p3 <= (p_dst_cols_V_read & ap_const_lv16_0);
        tmp_85_cast_fu_1029_p1 <= std_logic_vector(resize(signed(tmp_40_fu_1024_p2),16));

    tmp_s_fu_344_p3 <= (p_dst_rows_V_read & ap_const_lv16_0);
    u1_V_fu_1202_p2 <= std_logic_vector(unsigned(ap_const_lv20_40000) - unsigned(u_V_reg_1965));
    u_V_fu_1149_p3 <= 
        tmp_31_fu_1142_p3 when (tmp_30_reg_1895(0) = '1') else 
        ap_const_lv20_0;
    v1_V_fu_1207_p2 <= std_logic_vector(unsigned(ap_const_lv20_40000) - unsigned(v_V_2_reg_1971));
    v_V_2_fu_1163_p3 <= 
        tmp_36_fu_1156_p3 when (tmp_35_reg_1905(0) = '1') else 
        ap_const_lv20_0;
    v_V_fu_1218_p3 <= 
        ap_const_lv20_0 when (ap_reg_ppstg_tmp_38_reg_1882_pp0_it36(0) = '1') else 
        v_V_2_reg_1971;

    -- win_val_val_1_0_0_2_phi_fu_322_p10 assign process. --
    win_val_val_1_0_0_2_phi_fu_322_p10_assign_proc : process(ap_reg_ppstg_exitcond_reg_1782_pp0_it35, col_rd_2_reg_1924, row_rd_5_reg_1920, or_cond_reg_1957, ap_reg_ppiten_pp0_it36, tmp_42_reg_1949, tmp_43_reg_1953, k_buf_val_val_0_0_q0, k_buf_val_val_1_0_q0, ap_reg_phiprechg_win_val_val_1_0_0_2_reg_319pp0_it36)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and not((ap_const_lv1_0 = or_cond_reg_1957)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not((ap_const_lv1_0 = tmp_42_reg_1949)) and not((ap_const_lv1_0 = tmp_43_reg_1953))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_const_lv1_0 = tmp_42_reg_1949)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and not((ap_const_lv1_0 = row_rd_5_reg_1920)) and (ap_const_lv1_0 = or_cond_reg_1957) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and not((ap_const_lv1_0 = tmp_42_reg_1949)) and (ap_const_lv1_0 = tmp_43_reg_1953)))) then 
            win_val_val_1_0_0_2_phi_fu_322_p10 <= k_buf_val_val_0_0_q0;
        elsif (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1782_pp0_it35) and not((ap_const_lv1_0 = col_rd_2_reg_1924)) and (ap_const_lv1_0 = row_rd_5_reg_1920) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it36))) then 
            win_val_val_1_0_0_2_phi_fu_322_p10 <= k_buf_val_val_1_0_q0;
        else 
            win_val_val_1_0_0_2_phi_fu_322_p10 <= ap_reg_phiprechg_win_val_val_1_0_0_2_reg_319pp0_it36;
        end if; 
    end process;

    x_1_fu_1102_p2 <= std_logic_vector(unsigned(x_2_fu_959_p3) + unsigned(ap_const_lv16_1));
    x_2_fu_959_p3 <= 
        ap_const_lv16_0 when (ap_reg_ppstg_tmp_39_reg_1796_pp0_it34(0) = '1') else 
        x_fu_166;
end behav;
